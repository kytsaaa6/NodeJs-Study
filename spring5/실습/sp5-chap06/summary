1-6. 빈 라이플 사이클과 범위
	 : 스프링 컨테이너는 빈 객체의 라이프사이클을 관리
	 - 컨테이너 초기화 -> 빈 객체의 생성, 의존 주입, 초기화
	     컨테이너 종료 -> 빈 객체의 소멸
	 (1) 객체 생성
	 	- 스프링 컨테이너 초기화 시 가장 먼저 빈 객체 생성
	 (2) 의존 설정
	 	- 의존 자동 주입을 통한 의존 설정 수행
	 (3) 초기화
	 	- 모든 의존 설정이 완료되면 빈 객체의 초기화를 수행
	 	- 빈 객체를 초기화하기 위해 빈 객체의 지정된 메서드를 호출
	 (4) 소멸
	 	- 스프링 컨테이너를 종료하면 빈 객체의 소멸을 처리
	 
	 1) 빈 객체의 초기화와 소멸 : 스프링 인터페이스
	 - InitializingBean 인터페이스 : 초기화
	 - DisposableBean 인터페이스 : 소멸
	 
	 2) 빈 객체의 초기화와 소멸 : 커스텀 메서드
	 - @Bean 태그에서 initMethod 속성과 destoryMethod 속성을 사용해서 직접 메서드명 지정
	   ex) @Bean(initMethod = "connect", destoryMethod = "close")
	   
	 3) 빈 객체의 생성과 관리 범위
	 - 빈 객체는 별도 설정하지 않으면 기본적으로 싱글톤 범위
	 - 특정 빈의 범위를 지정하려면 @Scope 애노테이션을 사용
	   ex) Scope("prototype"), Scope("singleton") - 싱글톤 명시적 지정