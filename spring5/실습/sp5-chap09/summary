4-1. 스프링 웹 MVC
	 - @EnableWebMvc 애노테이션을 사용하면 스프링 MVC를 사용하는데 필요한 기본적인 구성을 설정
	 
	 1) Controller : 웹 요청을 처리하고 그 결과를 뷰에 전달하는 스프링 빈 객체
	    - 경로 지정 : @GetMapping, @PostMapping
	      ex) http://host:post/sp5-chap09/hello?name=bk
	          @GetMapping("/hello")
	          public String hello(Model model, 
	          		@RequestParam(value = "name", required = false) String name)
	    - @RequestParam 은 Http 요청 파라미터를 메서드의 파라미터로 전달받을 수 있게 해줌
	    - Model 파라미터는 컨트롤러의 처리 결과를 뷰에 전달할때 사용
	      ex) model.addAttribute("name : ", name);
	    - 마지막으로 뷰 이름을 리턴하며, 뷰 구현을 찾아주는것은 ViewResolver의 역할
	 
	 2) JSP
	    - viewResolvers 는 뷰 이름을 전달받아 
	      JSP 파일 경로 + 접미사(.jsp) 를 붙여서 최종적으로 사용할 JSP 파일의 경로를 결정
	      ex) /WEB-INF/view/hello.jsp
	 
	 => 컨트롤러에서 설정한 속성을 뷰 JSP 코드에서 접근할 수 있는 이유는 스프링 MVC 프레임워크가 
	       모델에 추가한 속성을 JSP에서 접근할 수 있게 HttpServletRequest에 옮겨주기 때문..
	    ex) jsp >>> ${name}